// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherConditions.DAL;

#nullable disable

namespace WeatherConditions.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20231112172121_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeatherConditions.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AirHumidity")
                        .HasColumnType("int");

                    b.Property<int?>("CloudCover")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("Date");

                    b.Property<float?>("DewPoint")
                        .HasColumnType("real");

                    b.Property<int?>("HorizontalVisibility")
                        .HasColumnType("int");

                    b.Property<int?>("LowerCloudLimit")
                        .HasColumnType("int");

                    b.Property<int?>("Pressure")
                        .HasColumnType("int");

                    b.Property<int?>("SpeedWind")
                        .HasColumnType("int");

                    b.Property<float?>("Temperature")
                        .HasColumnType("real");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("Time");

                    b.Property<string>("WeatherPhenomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindDirection")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weathers");
                });
#pragma warning restore 612, 618
        }
    }
}
